{"pages":[{},{},{}],"posts":[{"title":"markdown转pdf","date":"2018-08-24T01:59:50.000Z","path":"2018/08/24/markdown转pdf/","content":"<h1 id=\"Markdown-转化为-PDF-文档\"><a href=\"#Markdown-转化为-PDF-文档\" class=\"headerlink\" title=\"Markdown 转化为 PDF 文档\"></a>Markdown 转化为 PDF 文档</h1><hr>\n<p>虽说markdown文件好用, 但是毕竟比较小众, 这里介绍如何把markdown转化为pdf文档</p>\n<p>主要思想是:</p>\n<center><br><font size=\"4\" color=\"blue\"><br><strong><em>markdown</em></strong>  –&gt;&gt;   <strong><em>html</em></strong>      —&gt;&gt;    <strong><em>pdf</em></strong><br><font><br></font></font></center>\n\n<hr>\n<ol>\n<li><h5> markdown -&gt; html </h5><blockquote>\n<p>相信大家都用过atom这个编辑器吧, atom是github官方提供的编辑器, 界面友好, 功能强大, 插件丰富. <a href=\"https://atom.io/\" target=\"_blank\" rel=\"noopener\">下载链接</a><br><strong>使用markdown-preview插件(自带)</strong><br>打开.md文件, crtl+shift+m 打开markdown-preview, 在打开页面右键, 选择保存为 HTML (save as HTML)<br><img src=\"/assert/markdown/toPdf/1.jpg\" width=\"1200\"><br></p>\n</blockquote>\n</li>\n</ol>\n<hr>\n<ol start=\"2\">\n<li><h5> HTML -&gt; pdf </h5><blockquote>\n<p>使用谷歌浏览器打开刚才生成的HTML文件, 右键选择打印(print), 就可以生成pdf了</p>\n</blockquote>\n</li>\n</ol>\n<hr>\n","updated":"2018-08-24T03:52:02.144Z","comments":true,"categories":[{"name":"markdown","slug":"markdown","permalink":"https://YancyKahn.GitHub.io/categories/markdown/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://YancyKahn.GitHub.io/tags/markdown/"},{"name":"pdf","slug":"pdf","permalink":"https://YancyKahn.GitHub.io/tags/pdf/"}]},{"title":"shell脚本调试","date":"2018-08-24T01:42:08.000Z","path":"2018/08/24/shell脚本调试/","content":"<h1 id=\"Shell-脚本调试方法\"><a href=\"#Shell-脚本调试方法\" class=\"headerlink\" title=\"Shell 脚本调试方法\"></a>Shell 脚本调试方法</h1><p>我们在使用 <strong>Unix-like</strong> 系统时, shell编程是必不可少的, 在编写shell脚本的时候也不可避免会产生bug, 所以我们就需要学习shell脚本的调试方法.</p>\n<ol>\n<li><p>直接调试</p>\n<blockquote>\n<p>何为直接调试, 相信大家在编写c/c++程序调试时候都经常会在程序中加一个 <strong><em>printf</em></strong> 用来输出中间值达到调试的效果. 当然, 在shell脚本调试的时候这种方式也是同样适用的, 我们在程序中添加 <strong><em>echo</em></strong> 达到输出中间值的效果, 这里就不做过多的赘述.<br>如下面这个脚本</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/sh</span><br><span class=\"line\">mkdir file_dir</span><br><span class=\"line\">cd file_dir</span><br><span class=\"line\">for ((i=0;i&lt;10;i++))</span><br><span class=\"line\">do</span><br><span class=\"line\">    file_name=file_$i.txt</span><br><span class=\"line\">    touch $file_name</span><br><span class=\"line\">    echo $file_name</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用 Shell 脚本调试命令调试</p>\n</li>\n</ol>\n","updated":"2018-08-24T03:46:39.500Z","comments":true,"categories":[{"name":"debugging","slug":"debugging","permalink":"https://YancyKahn.GitHub.io/categories/debugging/"}],"tags":[{"name":"debugging","slug":"debugging","permalink":"https://YancyKahn.GitHub.io/tags/debugging/"},{"name":"shell","slug":"shell","permalink":"https://YancyKahn.GitHub.io/tags/shell/"}]},{"title":"GDB基础","date":"2018-08-23T08:37:41.000Z","path":"2018/08/23/GDB基础/","content":"<h1 id=\"GDB-调试\"><a href=\"#GDB-调试\" class=\"headerlink\" title=\"GDB 调试\"></a>GDB 调试</h1><hr>\n<p>我们在进行代码创作的时候, 不可避免会产生bug, 即使没有bug. 我们想要知道程序运行过程中的输出或者程序运行的情况, 以便于我们更好的管理程序或者随心所欲的操纵程序, 虽然大多数IDE已经集成的debug的功能, 但是在Bash中我们用vim进行创作, GDB的调试就必不可少, 可以发挥储更强大的功能, GDB虽小, 但是他的功能却是很强大的, 正所谓 “麻雀虽小, 五脏区全”.</p>\n<hr>\n<h2 id=\"何为GDB\"><a href=\"#何为GDB\" class=\"headerlink\" title=\"何为GDB\"></a>何为GDB</h2><p><strong>wikipedia</strong> 如是说:<br><a href=\"https://en.wikipedia.org/wiki/GNU_Debugger\" target=\"_blank\" rel=\"noopener\">The GNU Debugger (GDB)</a>  is a portable debugger that runs on many Unix-like systems and works for many programming languages, including Ada, C, C++, Objective-C, Free Pascal, Fortran, Go, Java[1] and partially others.<br>GDB就是运行在 <strong>Unix-like</strong> 平台上的GUN软件系统的调试器, 也就是说是一个专门进行调试的软件.<br>到目前为止, GDB已经支持以下的语言:</p>\n<blockquote>\n<ul>\n<li>Ada</li>\n<li>Assembly</li>\n<li>C</li>\n<li>C++</li>\n<li>D</li>\n<li>Fortran</li>\n<li>Go</li>\n<li>Objective-C</li>\n<li>OpenCL</li>\n<li>Modula-2</li>\n<li>Pascal</li>\n<li>Rust</li>\n</ul>\n</blockquote>\n<p><a href=\"http://www.gnu.org/software/gdb/\" target=\"_blank\" rel=\"noopener\">GDB官网</a> 在官网中我们可以下载到最新版本的GDB, 并且了解到的最新信息</p>\n<p><a href=\"https://sourceware.org/gdb/onlinedocs/gdb/\" target=\"_blank\" rel=\"noopener\">GDB-toturial</a> GDB调试参考</p>\n<p>一般情况下, GDB可以帮助我们进行一下功能:<br><em>参考至文献[ <a href=\"https://blog.csdn.net/haoel/article/details/2879\" target=\"_blank\" rel=\"noopener\">2.</a>]</em></p>\n<blockquote>\n<ul>\n<li>启动你的程序，可以按照你的自定义的要求随心所欲的运行程序。</li>\n<li>可让被调试的程序在你所指定的调置的断点处停住。（断点可以是条件表达式）</li>\n<li>当程序被停住时，可以检查此时你的程序中所发生的事。</li>\n<li>动态的改变你程序的执行环境。</li>\n</ul>\n</blockquote>\n<hr>\n<h2 id=\"GDB调试\"><a href=\"#GDB调试\" class=\"headerlink\" title=\"GDB调试\"></a>GDB调试</h2><p>在这里我只演示我们平时用的比较多的语言:</p>\n<blockquote>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> Ada</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> Assembly</li>\n<li>[X] C</li>\n<li>[X] C++</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> D</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> Fortran</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> Go</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> Objective-C</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> OpenCL</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> Modula-2</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> Pascal</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> Rust</li>\n</ul>\n</blockquote>\n<hr>\n<h4> 1. <strong>GDB 命令介绍</strong> </h4>\n\n<p>调试命令: <strong><em>For C/C++</em></strong></p>\n<blockquote>\n<ol>\n<li>在编译时将调试信息加入到可执行文件中<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// -g 参数将调试信息加入到可执行文件中  -Wall 参数在编译后显示所有警告</span><br><span class=\"line\">gcc -g -Wall helloworld.c</span><br><span class=\"line\">g++ -g -Wall helloworld.cpp</span><br><span class=\"line\">//编译完成后生成 a.exe 文件</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</blockquote>\n<p><img src=\"/assert/debug/gdb/1.jpg\" width=\"1230\"><br><br></p>\n<blockquote>\n<ol start=\"2\">\n<li>通过GDB执行a.exe 文件, 两种执行方式.<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gdb [filename]</span><br><span class=\"line\">gdb</span><br><span class=\"line\">file [filename]</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</blockquote>\n<p><img src=\"/assert/debug/gdb/2.jpg\" width=\"1230\"><br><br></p>\n<blockquote>\n<ol start=\"3\">\n<li>进行调试<br>调试一般分为以下几个步骤:<ol>\n<li>添加断点</li>\n<li>查看断点信息</li>\n<li>执行调试</li>\n<li>查看调试输出信息</li>\n</ol>\n</li>\n</ol>\n</blockquote>\n<hr>\n<p><br><br>在调试之前, 我先介绍以下GDB调试时候常用的几个命令:<br><br></p>\n<blockquote>\n<table>\n<thead>\n<tr>\n<th>功能</th>\n<th>命令</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>文件清单</td>\n<td>list / l</td>\n</tr>\n<tr>\n<td>执行程序</td>\n<td>run / r</td>\n</tr>\n<tr>\n<td>显示数据</td>\n<td>print / p, whatis</td>\n</tr>\n<tr>\n<td>断点设置</td>\n<td>break / b, info break, clean delete</td>\n</tr>\n<tr>\n<td>单步进入</td>\n<td>next / n, step, finish, until</td>\n</tr>\n<tr>\n<td>文件搜索</td>\n<td>serach</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p><br></p>\n<h4> list </h4>\n\n<p><em>参考至文献[ <a href=\"https://blog.csdn.net/sfeng177/article/details/53014289\" target=\"_blank\" rel=\"noopener\">7.</a>]</em></p>\n<blockquote>\n<p>list 命令用于列出代码, l 与其作用相同<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//list 命令的作用是在控制台上显示代码信息</span><br><span class=\"line\">list (l) 从中间显示前后10行</span><br><span class=\"line\">list + 向后显示10行</span><br><span class=\"line\">list - 向前显示10行</span><br><span class=\"line\">list [line number] 显示line number前后10行</span><br><span class=\"line\">list [function] 显示名为function的函数前后10行</span><br><span class=\"line\">list listsize &lt;count&gt; 设置一次性显示代码行数</span><br><span class=\"line\">show listsize 显示一次性显示行数</span><br><span class=\"line\">list &lt;start&gt;, &lt;end&gt; 显示从start到end行的代码</span><br><span class=\"line\">list , &lt;end&gt; 显示从当前行到end行的代码</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><img src=\"/assert/debug/gdb/3.jpg\" width=\"1230\"><br><br></p>\n<h4> break </h4>\n\n<p><em>参考至文献[ <a href=\"https://blog.csdn.net/yangzhongxuan/article/details/6897968\" target=\"_blank\" rel=\"noopener\">8.</a>]</em></p>\n<blockquote>\n<p>相关命令有break，tbreak，rbreak,hbreak，thbreak，后两种是基于硬件的，先不介绍。<br>break，tbreak可以根据行号、函数、条件生成断点。tbreak设置方法与break相同，只不过tbreak只在断点停一次，过后会自动将断点删除，break需要手动控制断点的删除和使能。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//break的参数</span><br><span class=\"line\">break linenum 指定行号添加断点</span><br><span class=\"line\">break filename:linenum 指定文件行号条件断点</span><br><span class=\"line\">break function 指定函数添加断点</span><br><span class=\"line\">break filename:function 指定文件函数添加断点</span><br><span class=\"line\">break condition 指定条件添加断点</span><br><span class=\"line\">break *address 指定地址添加断点(可以通过 info add + (变量/函数)获得)</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>以下为添加break断点的实例(tbreak同理)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.指定行号: break 10</span><br><span class=\"line\">2.指定文件行号: break test.cpp:10</span><br><span class=\"line\">3.指定函数: break fun</span><br><span class=\"line\">4.指定文件函数: break test.cpp:fun</span><br><span class=\"line\">5.指定条件: break 10 if flag == true</span><br><span class=\"line\">6.指定地址: 通过 info add main 得到地址 0x40148d,  break *0x40148d</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>rbreak断点<br>rbreak断点的添加方式是 rbreak + <a href=\"http://www.runoob.com/regexp/regexp-syntax.html\" target=\"_blank\" rel=\"noopener\">正则表达式</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rbreak fun*   //给所有以fun开头的函数加断点</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>查看断点信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">info break 查看所有断点信息</span><br><span class=\"line\">info break breakpoint 查看第breakpoint个断点的信息</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>清除与管理断点<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clean linenum 清除文件中linenum的断点</span><br><span class=\"line\">delete breakpoint 清除编号为breakpoint的断点</span><br><span class=\"line\">disable breakpoint1 禁止断点</span><br><span class=\"line\">enable breakpoint1 允许断点</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><img src=\"/assert/debug/gdb/4.jpg\" width=\"1230\"><br><br></p>\n<h4>run&amp;next</h4>\n\n<p><em>参考至文献[ <a href=\"https://www.cnblogs.com/qigaohua/p/6077790.html\" target=\"_blank\" rel=\"noopener\">9.</a>]</em></p>\n<blockquote>\n<p>程序执行分为运行和单步运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. run 运行准备调试的程序，在它后面可以跟随发给该程序的任何参数，包括标准输入和标准输出说明符(&lt;和&gt;)和shell通配符（*、？、[、]）在内。 如果你使用不带参数的run命令，gdb就再次使用你给予前一条run命令的参数，这是很有用的。</span><br><span class=\"line\">2. set args 修改发送给程序的参数</span><br><span class=\"line\">3. show args 查看其缺省参数的列表。</span><br><span class=\"line\">//单步执行</span><br><span class=\"line\">4. next 不进入的单步执行</span><br><span class=\"line\">5. step 进入的单步执行</span><br><span class=\"line\">6. finish 如果已经进入了某函数，而想退出该函数返回到它的调用函数中，可使用命令finish</span><br><span class=\"line\">7. until 结束当前循环</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><img src=\"/assert/debug/gdb/5.jpg\" width=\"1230\"><br><br></p>\n<h4>print</h4>\n\n<blockquote>\n<p>利用print命令可以检查各个变量的值, print 是 gdb 的一个功能很强的命令，利用它可以显示被调试的语言中任何有效的表达式。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print Var  打印出变量Var的值</span><br><span class=\"line\">print fun(x) 打印出函数fun(x)的值</span><br><span class=\"line\">print *obj 打印出某个数据结构或者对象</span><br><span class=\"line\">print $1 ($1为历史记录变量,在以后可以直接引用 $1 的值)</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><br></p>\n<h4>whatis</h4>\n\n<blockquote>\n<p>查看变量类型<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">whatis Var 打印出Var的类型</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><img src=\"/assert/debug/gdb/6.jpg\" width=\"1230\"><br><br></p>\n<h4> search </h4>\n\n<blockquote>\n<p>search命令主要是查找文件中的串<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">search text 该命令可显示在当前文件中包含text串的下一行。</span><br><span class=\"line\">reverse-search text 该命令可以显示包含text 的前一行。</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><img src=\"/assert/debug/gdb/7.jpg\" width=\"1230\"><br><br><br><br><br><a href=\"https://www.cnblogs.com/qigaohua/p/6077790.html\" target=\"_blank\" rel=\"noopener\">一篇很好的GDB调试命令总结</a></p>\n<hr>\n<h4> 2. <strong>GDB 调试实例</strong> </h4>\n\n<p>下面的 <strong><em>test01.cpp</em></strong> 通过这个例子, 我们将学到关于GDB调试的基础命令</p>\n<p><em>参考至文献[ <a href=\"https://blog.csdn.net/haoel/article/details/2879\" target=\"_blank\" rel=\"noopener\">2.</a>]</em><br><br><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//test01.cpp</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">#include &lt;cstdio&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int fun(int n)&#123;</span><br><span class=\"line\">    int sum = 0;</span><br><span class=\"line\">    for(int i = 0; i &lt; n; ++i)&#123;</span><br><span class=\"line\">        sum += i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">    int i = 0;</span><br><span class=\"line\">    int result = 0;</span><br><span class=\"line\">    for(int i = 1; i &lt;= 100; ++i)&#123;</span><br><span class=\"line\">        result += i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; &quot;result[1-100] = &quot; &lt;&lt; result &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; &quot;result[1-200] = &quot; &lt;&lt; fun(200) &lt;&lt; endl;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br><br><strong><em>GDB实例详解</em></strong><br><br><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS F:\\Debugging\\GDB&gt; vim .\\test01.cpp           ---&gt;&gt; 创建文件并编辑</span><br><span class=\"line\">PS F:\\Debugging\\GDB&gt; g++ -g -Wall .\\test01.cpp -o test01.exe            ---&gt;&gt; 编译</span><br><span class=\"line\">.\\test01.cpp: In function &apos;int main()&apos;:</span><br><span class=\"line\">.\\test01.cpp:16:9: warning: unused variable &apos;i&apos; [-Wunused-variable]</span><br><span class=\"line\">     int i = 0;             ---&gt;&gt; 输出警告信息</span><br><span class=\"line\">         ^</span><br><span class=\"line\">PS F:\\Debugging\\GDB&gt; gdb .\\test01.exe               ---&gt;&gt; 进行gdb调试</span><br><span class=\"line\">GNU gdb (GDB) 7.6.1</span><br><span class=\"line\">Copyright (C) 2013 Free Software Foundation, Inc.</span><br><span class=\"line\">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class=\"line\">This is free software: you are free to change and redistribute it.</span><br><span class=\"line\">There is NO WARRANTY, to the extent permitted by law.  Type &quot;show copying&quot;</span><br><span class=\"line\">and &quot;show warranty&quot; for details.</span><br><span class=\"line\">This GDB was configured as &quot;mingw32&quot;.</span><br><span class=\"line\">For bug reporting instructions, please see:</span><br><span class=\"line\">&lt;http://www.gnu.org/software/gdb/bugs/&gt;...</span><br><span class=\"line\">Reading symbols from F:\\Debugging\\GDB\\test01.exe...done.</span><br><span class=\"line\">(gdb) list                                  ---&gt;&gt; list / l 列出程序代码</span><br><span class=\"line\">7       int fun(int n)&#123;</span><br><span class=\"line\">8           int sum = 0, i = 0;</span><br><span class=\"line\">9           for(i = 0; i &lt; n; ++i)&#123;</span><br><span class=\"line\">10              sum += i;</span><br><span class=\"line\">11          &#125;</span><br><span class=\"line\">12          return sum;</span><br><span class=\"line\">13      &#125;</span><br><span class=\"line\">14</span><br><span class=\"line\">15      int main()&#123;</span><br><span class=\"line\">16          int i = 0;</span><br><span class=\"line\">(gdb)                                       ---&gt;&gt; 继续回车执行上一步的命令</span><br><span class=\"line\">17          int result = 0;</span><br><span class=\"line\">18          for(int i = 1; i &lt;= 100; ++i)&#123;</span><br><span class=\"line\">19              result += i;</span><br><span class=\"line\">20          &#125;</span><br><span class=\"line\">21</span><br><span class=\"line\">22          cout &lt;&lt; &quot;result[1-100] = &quot; &lt;&lt; result &lt;&lt; endl;</span><br><span class=\"line\">23          cout &lt;&lt; &quot;result[1-200] = &quot; &lt;&lt; fun(200) &lt;&lt; endl;</span><br><span class=\"line\">24          return 0;</span><br><span class=\"line\">25      &#125;</span><br><span class=\"line\">(gdb) break 17                              ---&gt;&gt; 在程序第17行设置断点</span><br><span class=\"line\">Breakpoint 1 at 0x4014b2: file .\\test01.cpp, line 17.</span><br><span class=\"line\">(gdb) break fun                             ---&gt;&gt; 对于fun函数设置断点</span><br><span class=\"line\">Breakpoint 2 at 0x401466: file .\\test01.cpp, line 8.</span><br><span class=\"line\">(gdb) info break                            ---&gt;&gt; 输出断点信息</span><br><span class=\"line\">Num     Type           Disp Enb Address    What</span><br><span class=\"line\">1       breakpoint     keep y   0x004014b2 in main() at .\\test01.cpp:17</span><br><span class=\"line\">2       breakpoint     keep y   0x00401466 in fun(int) at .\\test01.cpp:8</span><br><span class=\"line\">(gdb) run                                   ---&gt;&gt; 运行程序</span><br><span class=\"line\">Starting program: F:\\Debugging\\GDB/.\\test01.exe</span><br><span class=\"line\">[New Thread 14936.0x19a8]</span><br><span class=\"line\">[New Thread 14936.0x3a9c]</span><br><span class=\"line\">[New Thread 14936.0x28d8]</span><br><span class=\"line\"></span><br><span class=\"line\">Breakpoint 1, main () at .\\test01.cpp:17</span><br><span class=\"line\">17          int result = 0;</span><br><span class=\"line\">(gdb) n                                     ---&gt;&gt; next / n 单步运行</span><br><span class=\"line\">18          for(int i = 1; i &lt;= 100; ++i)&#123;</span><br><span class=\"line\">(gdb) n</span><br><span class=\"line\">19              result += i;</span><br><span class=\"line\">(gdb) n</span><br><span class=\"line\">18          for(int i = 1; i &lt;= 100; ++i)&#123;</span><br><span class=\"line\">(gdb) c                                     ---&gt;&gt; continue / c 继续运行</span><br><span class=\"line\">Continuing.</span><br><span class=\"line\">result[1-100] = 5050                        ---&gt;&gt; 输出信息</span><br><span class=\"line\"></span><br><span class=\"line\">Breakpoint 2, fun (n=200) at .\\test01.cpp:8</span><br><span class=\"line\">8           int sum = 0, i = 0;</span><br><span class=\"line\">(gdb) print i                               ---&gt;&gt; 打印i</span><br><span class=\"line\">$1 = 4201120</span><br><span class=\"line\">(gdb) n</span><br><span class=\"line\">9           for(i = 0; i &lt; n; ++i)&#123;</span><br><span class=\"line\">(gdb) n</span><br><span class=\"line\">10              sum += i;</span><br><span class=\"line\">(gdb) print sum</span><br><span class=\"line\">$2 = 0</span><br><span class=\"line\">(gdb) n</span><br><span class=\"line\">9           for(i = 0; i &lt; n; ++i)&#123;</span><br><span class=\"line\">(gdb) print sum</span><br><span class=\"line\">$3 = 0</span><br><span class=\"line\">(gdb) n</span><br><span class=\"line\">10              sum += i;</span><br><span class=\"line\">(gdb) n</span><br><span class=\"line\">9           for(i = 0; i &lt; n; ++i)&#123;</span><br><span class=\"line\">(gdb) print sum                             ---&gt;&gt; 打印sum</span><br><span class=\"line\">$4 = 1</span><br><span class=\"line\">(gdb) bt                                    ---&gt;&gt; 输出栈信息</span><br><span class=\"line\">#0  fun (n=200) at .\\test01.cpp:9   </span><br><span class=\"line\">#1  0x00401515 in _fu0___ZSt4cout () at .\\test01.cpp:23</span><br><span class=\"line\">(gdb) finish                                ---&gt;&gt; 结束函数</span><br><span class=\"line\">Run till exit from #0  fun (n=200) at .\\test01.cpp:9</span><br><span class=\"line\">0x00401515 in _fu0___ZSt4cout () at .\\test01.cpp:23</span><br><span class=\"line\">23          cout &lt;&lt; &quot;result[1-200] = &quot; &lt;&lt; fun(200) &lt;&lt; endl;</span><br><span class=\"line\">Value returned is $5 = 19900</span><br><span class=\"line\">(gdb) c                                     ---&gt;&gt; 继续运行</span><br><span class=\"line\">Continuing.</span><br><span class=\"line\">result[1-200] = 19900</span><br><span class=\"line\">[Inferior 1 (process 14936) exited normally]</span><br><span class=\"line\">(gdb) quit                                  ---&gt;&gt; 运行结束, 退出gdb</span><br><span class=\"line\">PS F:\\Debugging\\GDB&gt;</span><br></pre></td></tr></table></figure></p>\n<p>GDB调试的大致也就这么多, 灵活运用可以让让自己对程序的操作行云流水, 做到对自己的程序能随心所欲的控制.</p>\n<center><br><font color=\"pink\"><br><strong>愿天堂无BUG</strong><br></font><br></center>\n\n<h3 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h3><p>[1.] <a href=\"https://en.wikipedia.org/wiki/GNU_Debugger\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/GNU_Debugger</a><br>[2.] <a href=\"https://blog.csdn.net/haoel/article/details/2879\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/haoel/article/details/2879</a><br>[3.] <a href=\"https://sourceware.org/gdb/onlinedocs/gdb/\" target=\"_blank\" rel=\"noopener\">https://sourceware.org/gdb/onlinedocs/gdb/</a><br>[4.] <a href=\"http://www.gnu.org/software/gdb/\" target=\"_blank\" rel=\"noopener\">http://www.gnu.org/software/gdb/</a><br>[5.]<a href=\"http://wiki.ubuntu.org.cn/%E7%94%A8GDB%E8%B0%83%E8%AF%95%E7%A8%8B%E5%BA%8F\" target=\"_blank\" rel=\"noopener\">http://wiki.ubuntu.org.cn/%E7%94%A8GDB%E8%B0%83%E8%AF%95%E7%A8%8B%E5%BA%8F</a><br>[6.] <a href=\"https://blog.csdn.net/fuqiangnxn/article/details/54140155\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/fuqiangnxn/article/details/54140155</a><br>[7.] <a href=\"https://blog.csdn.net/sfeng177/article/details/53014289\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/sfeng177/article/details/53014289</a><br>[8.] <a href=\"https://blog.csdn.net/yangzhongxuan/article/details/6897968\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/yangzhongxuan/article/details/6897968</a><br>[9.] <a href=\"https://www.cnblogs.com/qigaohua/p/6077790.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/qigaohua/p/6077790.html</a></p>\n","updated":"2018-08-23T16:21:33.694Z","comments":true,"categories":[{"name":"debugging","slug":"debugging","permalink":"https://YancyKahn.GitHub.io/categories/debugging/"}],"tags":[{"name":"debugging","slug":"debugging","permalink":"https://YancyKahn.GitHub.io/tags/debugging/"},{"name":"gdb","slug":"gdb","permalink":"https://YancyKahn.GitHub.io/tags/gdb/"}]},{"title":".vimrc","date":"2018-08-23T07:59:10.000Z","path":"2018/08/23/vimrc/","content":"<h1 id=\"一个优雅的vim配置\"><a href=\"#一个优雅的vim配置\" class=\"headerlink\" title=\"一个优雅的vim配置\"></a>一个优雅的vim配置</h1><h3 id=\"集成功能\"><a href=\"#集成功能\" class=\"headerlink\" title=\"集成功能\"></a><strong>集成功能</strong></h3><blockquote>\n<ul>\n<li><strong>F6 = c/c++文件编译运行</strong></li>\n<li><strong>F2 = 显示头信息</strong></li>\n<li><strong>F5 = 一键生成c++头文件</strong></li>\n<li><strong>自动补全括号</strong></li>\n<li><strong>代码智能对齐</strong></li>\n</ul>\n</blockquote>\n<h3 id=\"vim配置的repo\"><a href=\"#vim配置的repo\" class=\"headerlink\" title=\"vim配置的repo\"></a>vim配置的repo</h3><p><a href=\"https://github.com/YancyKahn/Beautiful-VIM\" target=\"_blank\" rel=\"noopener\">Beautiful-vim</a></p>\n<h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p><img src=\"/assert/vimrc/vimrc.jpg\" alt=\"vimrc效果图\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;set number</span><br><span class=\"line\">set nu</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;set tab width 4</span><br><span class=\"line\">set tabstop=4</span><br><span class=\"line\">set expandtab</span><br><span class=\"line\">set shiftwidth=4</span><br><span class=\"line\">set smarttab</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;c indnet</span><br><span class=\"line\">set cindent</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;smart indent</span><br><span class=\"line\">set smartindent</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;auto indent</span><br><span class=\"line\">set autoindent</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;ruler</span><br><span class=\"line\">set ruler</span><br><span class=\"line\">&quot;colorscheme peachpuff</span><br><span class=\"line\">&quot;colorscheme default</span><br><span class=\"line\">&quot;colorscheme koehler</span><br><span class=\"line\">&quot;colorscheme desert</span><br><span class=\"line\">&quot;colorscheme morning</span><br><span class=\"line\">&quot;colorscheme pablo</span><br><span class=\"line\">&quot;remove vi</span><br><span class=\"line\"></span><br><span class=\"line\">set nocompatible</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;set last status</span><br><span class=\"line\">set laststatus=2</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;mouse enable</span><br><span class=\"line\">set mouse=a</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;no backup</span><br><span class=\"line\">set nobackup</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;set size</span><br><span class=\"line\">set lines=46</span><br><span class=\"line\">set columns=90</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;syntax on</span><br><span class=\"line\">syntax on</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;set backspace</span><br><span class=\"line\">set backspace=indent,eol,start</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;keymap</span><br><span class=\"line\">&quot;auto</span><br><span class=\"line\">inoremap &apos; &apos;&apos;&lt;ESC&gt;i</span><br><span class=\"line\">inoremap &quot; &quot;&quot;&lt;ESC&gt;i</span><br><span class=\"line\">&quot;inoremap &lt; &lt;&gt;&lt;ESC&gt;i</span><br><span class=\"line\">inoremap &#123; &#123;&lt;CR&gt;&#125;&lt;ESC&gt;i</span><br><span class=\"line\">inoremap ( ()&lt;ESC&gt;i</span><br><span class=\"line\">inoremap [ []&lt;ESC&gt;i</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;share clipboard</span><br><span class=\"line\">set clipboard+=unnamed</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;Lang &amp; Enconding</span><br><span class=\"line\">set fileencodings=utf-8,gbk2312,gbk,gb18030,cp936</span><br><span class=\"line\">set encoding=utf-8</span><br><span class=\"line\">set langmenu=zh_CN</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;Function</span><br><span class=\"line\">&quot;compileRunCPP</span><br><span class=\"line\">map &lt;F6&gt; :call CompileRunCPP()&lt;cr&gt;</span><br><span class=\"line\">func! CompileRunCPP()</span><br><span class=\"line\">    exec &quot;w&quot;</span><br><span class=\"line\">    exec &quot;!g++ -g2 % -o %&lt;&quot;</span><br><span class=\"line\">    exec &quot;!./%&lt;&quot;</span><br><span class=\"line\">endfun</span><br><span class=\"line\">&quot;setInfo</span><br><span class=\"line\">if !exists(&quot;*SetTitlea&quot;)</span><br><span class=\"line\">map &lt;F2&gt; :call SetInfo()&lt;CR&gt;</span><br><span class=\"line\">func SetInfo()</span><br><span class=\"line\">let l = 0</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;/************************************************&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos; *Author*        : YancyKahn&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos; *Created Time*  : &apos;.strftime(&apos;%c&apos;))</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;**Problem**:&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;**Analyse**:&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;**Get**:&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;**Code**:&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;*********************************************/&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;&apos;)</span><br><span class=\"line\">endfunc</span><br><span class=\"line\">endif</span><br><span class=\"line\">&quot;setCode</span><br><span class=\"line\">if !exists(&quot;*SetTitlea&quot;)</span><br><span class=\"line\">map &lt;F5&gt; :call SetCode()&lt;CR&gt;</span><br><span class=\"line\">func SetCode()</span><br><span class=\"line\">let l = 10</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#include &lt;cstdio&gt;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#include &lt;cstring&gt;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#include &lt;iostream&gt;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#include &lt;algorithm&gt;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#include &lt;vector&gt;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#include &lt;queue&gt;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#include &lt;set&gt;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#include &lt;map&gt;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#include &lt;string&gt;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#include &lt;cmath&gt;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#include &lt;cstdlib&gt;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#include &lt;ctime&gt;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#include &lt;stack&gt;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;using namespace std;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;typedef pair&lt;int, int&gt; pii;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;typedef long long ll;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;typedef unsigned long long ull;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;typedef vector&lt;int&gt; vi;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#define pr(x) cout &lt;&lt; #x &lt;&lt; &quot;: &quot; &lt;&lt; x &lt;&lt; &quot;  &quot; &apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#define pl(x) cout &lt;&lt; #x &lt;&lt; &quot;: &quot; &lt;&lt; x &lt;&lt; endl;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#define pri(a) printf(&quot;%d\\n&quot;,(a))&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#define xx first&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#define yy second&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#define sa(n) scanf(&quot;%d&quot;, &amp;(n))&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#define sal(n) scanf(&quot;%lld&quot;, &amp;(n))&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#define sai(n) scanf(&quot;%I64d&quot;, &amp;(n))&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#define vep(c) for(decltype((c).begin() ) it = (c).begin(); it != (c).end(); it++) &apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;const int mod = int(1e9) + 7, INF = 0x3f3f3f3f;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;const int maxn = 1e5 + 13;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;int main(void)&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;&#123;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#ifdef LOCAL&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;    //freopen(&quot;in.txt&quot;, &quot;r&quot;, stdin);&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;    //freopen(&quot;out.txt&quot;, &quot;w&quot;, stdout);&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;#endif&apos;)</span><br><span class=\"line\">&quot; let l = l + 1 | call setline(l,&apos;    ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;    &apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;    return 0;&apos;)</span><br><span class=\"line\">let l = l + 1 | call setline(l,&apos;&#125;&apos;)</span><br><span class=\"line\">endfunc</span><br><span class=\"line\">endif</span><br></pre></td></tr></table></figure>\n","updated":"2018-08-23T08:21:18.029Z","comments":true,"categories":[{"name":"vim","slug":"vim","permalink":"https://YancyKahn.GitHub.io/categories/vim/"},{"name":"configure","slug":"vim/configure","permalink":"https://YancyKahn.GitHub.io/categories/vim/configure/"}],"tags":[{"name":"vim","slug":"vim","permalink":"https://YancyKahn.GitHub.io/tags/vim/"},{"name":"configure","slug":"configure","permalink":"https://YancyKahn.GitHub.io/tags/configure/"}]},{"title":"CF805D","date":"2018-08-23T06:50:18.000Z","path":"2018/08/23/CF805D/","content":"<h1 id=\"CodeForces-805-D\"><a href=\"#CodeForces-805-D\" class=\"headerlink\" title=\"CodeForces 805 D\"></a>CodeForces 805 D</h1><pre><code>题目大意:\n如果有[ab], 那么就转化为[bba], 问最少需要多少次转化(MOD 1e9+7)\n分析:\n    b前每有一个a都要多进行两倍的转化操作, 因为每次转化都会多生成一个b, 这个b还要与后面的a进行转化操作, 所以就相当于进行2倍的操作\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">typedef long long ll;</span><br><span class=\"line\">const int MAXN = 1e6 + 10;</span><br><span class=\"line\">const ll MOD = 1e9 + 7;</span><br><span class=\"line\">int main() &#123;</span><br><span class=\"line\">  string s;</span><br><span class=\"line\">  while (cin &gt;&gt; s) &#123;</span><br><span class=\"line\">    ll sum = 0;</span><br><span class=\"line\">    int len = s.length();</span><br><span class=\"line\">    int x = 0;</span><br><span class=\"line\">    for (int i = len - 1; i &gt;= 0; --i) &#123;</span><br><span class=\"line\">      if (s[i] == &apos;b&apos;) &#123;</span><br><span class=\"line\">        x++;</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        sum += x;</span><br><span class=\"line\">        sum %= MOD;</span><br><span class=\"line\">        x *= 2;</span><br><span class=\"line\">        x %= MOD;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","updated":"2018-08-23T08:18:10.067Z","comments":true,"categories":[{"name":"CodeForces","slug":"CodeForces","permalink":"https://YancyKahn.GitHub.io/categories/CodeForces/"}],"tags":[{"name":"CodeForces","slug":"CodeForces","permalink":"https://YancyKahn.GitHub.io/tags/CodeForces/"}]},{"title":"markdown-toturial","date":"2018-08-23T01:03:23.000Z","path":"2018/08/23/markdown-toturial/","content":"<blockquote>\n<h1 id=\"Markdown-教程汇总\"><a href=\"#Markdown-教程汇总\" class=\"headerlink\" title=\"Markdown 教程汇总\"></a>Markdown 教程汇总</h1></blockquote>\n<h3 id=\"系统教程\"><a href=\"#系统教程\" class=\"headerlink\" title=\"系统教程\"></a>系统教程</h3><blockquote>\n<ul>\n<li><strong><a href=\"https://www.zybuluo.com/mdeditor\" target=\"_blank\" rel=\"noopener\">Cmd Markdown</a></strong></li>\n<li><strong><a href=\"https://www.w3cschool.cn/lme/\" target=\"_blank\" rel=\"noopener\">W3C School</a></strong></li>\n<li><strong><a href=\"https://segmentfault.com/markdown\" target=\"_blank\" rel=\"noopener\">SegmentFualt</a></strong></li>\n</ul>\n</blockquote>\n<h3 id=\"数学公式\"><a href=\"#数学公式\" class=\"headerlink\" title=\"数学公式\"></a>数学公式</h3><blockquote>\n<ul>\n<li><strong><a href=\"http://www.mohu.org/info/symbols/symbols.htm\" target=\"_blank\" rel=\"noopener\">常用数学符号的 LaTeX 表示方法</a></strong></li>\n<li><strong><a href=\"https://www.jianshu.com/p/888c5eaebabd\" target=\"_blank\" rel=\"noopener\">markdown中插入数学公式</a></strong></li>\n</ul>\n</blockquote>\n","updated":"2018-08-23T06:29:23.319Z","comments":true,"categories":[{"name":"markdown","slug":"markdown","permalink":"https://YancyKahn.GitHub.io/categories/markdown/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://YancyKahn.GitHub.io/tags/markdown/"},{"name":"toturial","slug":"toturial","permalink":"https://YancyKahn.GitHub.io/tags/toturial/"}]},{"title":"CF805C","date":"2018-08-23T00:54:25.000Z","path":"2018/08/23/CF805C/","content":"<h1 id=\"CodeForces-805-C\"><a href=\"#CodeForces-805-C\" class=\"headerlink\" title=\"CodeForces 805 C\"></a>CodeForces 805 C</h1><blockquote>\n<p>题目大意:</p>\n</blockquote>\n<pre><code>有[1, n]个学校, 从学校i到j的花费为 (i + j)%(1 + n), 要求经过所有的学校花费最小.\n那么可以这样走:\n当n = 5  \ni   j   cost\n1   5   0\n5   2   1\n2   4   0\n4   3   1\n可以得到公式\n(n + 1)/2 - 1\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;cstdio&gt;</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main() &#123;</span><br><span class=\"line\">  int n;</span><br><span class=\"line\">  while (cin &gt;&gt; n) &#123;</span><br><span class=\"line\">    cout &lt;&lt; (n + 1) / 2 - 1 &lt;&lt; endl;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","updated":"2018-08-23T06:25:39.569Z","comments":true,"categories":[{"name":"CodeForces","slug":"CodeForces","permalink":"https://YancyKahn.GitHub.io/categories/CodeForces/"}],"tags":[{"name":"CodeForces","slug":"CodeForces","permalink":"https://YancyKahn.GitHub.io/tags/CodeForces/"},{"name":"水题","slug":"水题","permalink":"https://YancyKahn.GitHub.io/tags/水题/"},{"name":"思维","slug":"思维","permalink":"https://YancyKahn.GitHub.io/tags/思维/"}]},{"title":"CF805B","date":"2018-08-22T16:12:45.000Z","path":"2018/08/23/CF805B/","content":"<h1 id=\"CodeForces-805\"><a href=\"#CodeForces-805\" class=\"headerlink\" title=\"CodeForces 805\"></a>CodeForces 805</h1><p><div></div></p>\n<blockquote>\n<p>这道题其实挺好想到的, 首先不能是三个字符构成的回文, 并且要保证字符’c’的数量尽可能的少 <br><br>那么构成的字符串是这样的</p>\n</blockquote>\n<pre><code>a\naa\naab\naabb\naabba\naabbaa\naabbaab\naabbaabb\n</code></pre><blockquote>\n<p>所以只要满足只有ab组成的字符串并且没有数量为3的回文ֻ</p>\n</blockquote>\n<p><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">#include &lt;string&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main() &#123;</span><br><span class=\"line\">  int n;</span><br><span class=\"line\">  string s;</span><br><span class=\"line\">  while (cin &gt;&gt; n) &#123;</span><br><span class=\"line\">    s = &quot;&quot;;</span><br><span class=\"line\">    bool flag = 1, flag2 = n % 2;</span><br><span class=\"line\">    n -= flag2;</span><br><span class=\"line\">    for (int i = 0; i &lt; n; i += 2) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      if (flag)</span><br><span class=\"line\">        s += &quot;aa&quot;;</span><br><span class=\"line\">      else</span><br><span class=\"line\">        s += &quot;bb&quot;;</span><br><span class=\"line\">      flag = !flag;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (flag2) &#123;</span><br><span class=\"line\">      if (flag)</span><br><span class=\"line\">        s += &quot;a&quot;;</span><br><span class=\"line\">      else</span><br><span class=\"line\">        s += &quot;b&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; s &lt;&lt; endl;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  return 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\">a</span><br><span class=\"line\">aa</span><br><span class=\"line\">aab</span><br><span class=\"line\">aabb</span><br><span class=\"line\">aabba</span><br><span class=\"line\">aabbaa</span><br><span class=\"line\">aabbaab</span><br><span class=\"line\">aabbaabb</span><br><span class=\"line\">*/</span><br></pre></td></tr></table></figure></p>\n","updated":"2018-08-23T04:05:47.779Z","comments":true,"categories":[{"name":"CodeForces","slug":"CodeForces","permalink":"https://YancyKahn.GitHub.io/categories/CodeForces/"},{"name":"string","slug":"CodeForces/string","permalink":"https://YancyKahn.GitHub.io/categories/CodeForces/string/"}],"tags":[{"name":"CodeForces","slug":"CodeForces","permalink":"https://YancyKahn.GitHub.io/tags/CodeForces/"},{"name":"思维","slug":"思维","permalink":"https://YancyKahn.GitHub.io/tags/思维/"},{"name":"string","slug":"string","permalink":"https://YancyKahn.GitHub.io/tags/string/"},{"name":"回文","slug":"回文","permalink":"https://YancyKahn.GitHub.io/tags/回文/"}]},{"title":"CF805A","date":"2018-08-22T15:59:57.000Z","path":"2018/08/22/CF805A/","content":"<p>#CodeForces 805A</p>\n<p>  一道水题, 很好想到</p>\n<blockquote>\n<ul>\n<li>if l == r: <br><pre><code>ans = l\n</code></pre></li>\n<li>else: <br><pre><code>ans = 2\n</code></pre></li>\n</ul>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;cstdio&gt;</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">typedef long long ll;</span><br><span class=\"line\">int main() &#123;</span><br><span class=\"line\">  ll a, b;</span><br><span class=\"line\">  while (cin &gt;&gt; a &gt;&gt; b) &#123;</span><br><span class=\"line\">    printf(&quot;%lld\\n&quot;, a == b ? a : 2);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","updated":"2018-08-23T04:04:02.686Z","comments":true,"categories":[{"name":"CodeForces","slug":"CodeForces","permalink":"https://YancyKahn.GitHub.io/categories/CodeForces/"}],"tags":[{"name":"CodeForces","slug":"CodeForces","permalink":"https://YancyKahn.GitHub.io/tags/CodeForces/"},{"name":"水题","slug":"水题","permalink":"https://YancyKahn.GitHub.io/tags/水题/"}]},{"title":"c++-HelloWorld","date":"2018-08-22T15:35:32.000Z","path":"2018/08/22/c-HelloWorld/","content":"<h1 id=\"Hello-World-For-C\"><a href=\"#Hello-World-For-C\" class=\"headerlink\" title=\"Hello World For C++\"></a>Hello World For C++</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    cout &lt;&lt; &quot;hello world&quot; &lt;&lt; endl;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","updated":"2018-08-23T00:41:06.179Z","comments":true,"categories":[{"name":"C++","slug":"C","permalink":"https://YancyKahn.GitHub.io/categories/C/"}],"tags":[{"name":"helloworld","slug":"helloworld","permalink":"https://YancyKahn.GitHub.io/tags/helloworld/"}]},{"title":"Python-helloWorld","date":"2018-08-22T14:27:51.000Z","path":"2018/08/22/Python-helloWorld/","content":"<h1 id=\"Hello-World-For-Python\"><a href=\"#Hello-World-For-Python\" class=\"headerlink\" title=\"Hello World For Python\"></a>Hello World For Python</h1><h3 id=\"Python-3\"><a href=\"#Python-3\" class=\"headerlink\" title=\"Python 3\"></a>Python 3</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;hello world1&quot;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Python-2\"><a href=\"#Python-2\" class=\"headerlink\" title=\"Python 2\"></a>Python 2</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print &quot;hello world!&quot;</span><br></pre></td></tr></table></figure>\n","updated":"2018-08-22T15:56:21.238Z","comments":true,"categories":[{"name":"Python","slug":"Python","permalink":"https://YancyKahn.GitHub.io/categories/Python/"}],"tags":[{"name":"helloworld","slug":"helloworld","permalink":"https://YancyKahn.GitHub.io/tags/helloworld/"}]}]}